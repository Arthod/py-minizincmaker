include "decreasing.mzn";
var 0..13: bin_load_0;
var 0..13: bin_load_1;
var 0..13: bin_load_2;
var 0..13: bin_load_3;
var 0..13: bin_load_4;
var 0..13: bin_load_5;
var 0..13: bin_load_6;
var 0..13: bin_load_7;
var 0..13: bin_load_8;
var 0..13: bin_load_9;
var 0..13: bin_load_10;
var 0..13: bin_load_11;
var 0..13: bin_load_12;
var bool: bin_item_0_0;
var bool: bin_item_0_1;
var bool: bin_item_0_2;
var bool: bin_item_0_3;
var bool: bin_item_0_4;
var bool: bin_item_0_5;
var bool: bin_item_0_6;
var bool: bin_item_0_7;
var bool: bin_item_0_8;
var bool: bin_item_0_9;
var bool: bin_item_0_10;
var bool: bin_item_0_11;
var bool: bin_item_0_12;
var bool: bin_item_1_0;
var bool: bin_item_1_1;
var bool: bin_item_1_2;
var bool: bin_item_1_3;
var bool: bin_item_1_4;
var bool: bin_item_1_5;
var bool: bin_item_1_6;
var bool: bin_item_1_7;
var bool: bin_item_1_8;
var bool: bin_item_1_9;
var bool: bin_item_1_10;
var bool: bin_item_1_11;
var bool: bin_item_1_12;
var bool: bin_item_2_0;
var bool: bin_item_2_1;
var bool: bin_item_2_2;
var bool: bin_item_2_3;
var bool: bin_item_2_4;
var bool: bin_item_2_5;
var bool: bin_item_2_6;
var bool: bin_item_2_7;
var bool: bin_item_2_8;
var bool: bin_item_2_9;
var bool: bin_item_2_10;
var bool: bin_item_2_11;
var bool: bin_item_2_12;
var bool: bin_item_3_0;
var bool: bin_item_3_1;
var bool: bin_item_3_2;
var bool: bin_item_3_3;
var bool: bin_item_3_4;
var bool: bin_item_3_5;
var bool: bin_item_3_6;
var bool: bin_item_3_7;
var bool: bin_item_3_8;
var bool: bin_item_3_9;
var bool: bin_item_3_10;
var bool: bin_item_3_11;
var bool: bin_item_3_12;
var bool: bin_item_4_0;
var bool: bin_item_4_1;
var bool: bin_item_4_2;
var bool: bin_item_4_3;
var bool: bin_item_4_4;
var bool: bin_item_4_5;
var bool: bin_item_4_6;
var bool: bin_item_4_7;
var bool: bin_item_4_8;
var bool: bin_item_4_9;
var bool: bin_item_4_10;
var bool: bin_item_4_11;
var bool: bin_item_4_12;
var bool: bin_item_5_0;
var bool: bin_item_5_1;
var bool: bin_item_5_2;
var bool: bin_item_5_3;
var bool: bin_item_5_4;
var bool: bin_item_5_5;
var bool: bin_item_5_6;
var bool: bin_item_5_7;
var bool: bin_item_5_8;
var bool: bin_item_5_9;
var bool: bin_item_5_10;
var bool: bin_item_5_11;
var bool: bin_item_5_12;
var bool: bin_item_6_0;
var bool: bin_item_6_1;
var bool: bin_item_6_2;
var bool: bin_item_6_3;
var bool: bin_item_6_4;
var bool: bin_item_6_5;
var bool: bin_item_6_6;
var bool: bin_item_6_7;
var bool: bin_item_6_8;
var bool: bin_item_6_9;
var bool: bin_item_6_10;
var bool: bin_item_6_11;
var bool: bin_item_6_12;
var bool: bin_item_7_0;
var bool: bin_item_7_1;
var bool: bin_item_7_2;
var bool: bin_item_7_3;
var bool: bin_item_7_4;
var bool: bin_item_7_5;
var bool: bin_item_7_6;
var bool: bin_item_7_7;
var bool: bin_item_7_8;
var bool: bin_item_7_9;
var bool: bin_item_7_10;
var bool: bin_item_7_11;
var bool: bin_item_7_12;
var bool: bin_item_8_0;
var bool: bin_item_8_1;
var bool: bin_item_8_2;
var bool: bin_item_8_3;
var bool: bin_item_8_4;
var bool: bin_item_8_5;
var bool: bin_item_8_6;
var bool: bin_item_8_7;
var bool: bin_item_8_8;
var bool: bin_item_8_9;
var bool: bin_item_8_10;
var bool: bin_item_8_11;
var bool: bin_item_8_12;
var bool: bin_item_9_0;
var bool: bin_item_9_1;
var bool: bin_item_9_2;
var bool: bin_item_9_3;
var bool: bin_item_9_4;
var bool: bin_item_9_5;
var bool: bin_item_9_6;
var bool: bin_item_9_7;
var bool: bin_item_9_8;
var bool: bin_item_9_9;
var bool: bin_item_9_10;
var bool: bin_item_9_11;
var bool: bin_item_9_12;
var bool: bin_item_10_0;
var bool: bin_item_10_1;
var bool: bin_item_10_2;
var bool: bin_item_10_3;
var bool: bin_item_10_4;
var bool: bin_item_10_5;
var bool: bin_item_10_6;
var bool: bin_item_10_7;
var bool: bin_item_10_8;
var bool: bin_item_10_9;
var bool: bin_item_10_10;
var bool: bin_item_10_11;
var bool: bin_item_10_12;
var bool: bin_item_11_0;
var bool: bin_item_11_1;
var bool: bin_item_11_2;
var bool: bin_item_11_3;
var bool: bin_item_11_4;
var bool: bin_item_11_5;
var bool: bin_item_11_6;
var bool: bin_item_11_7;
var bool: bin_item_11_8;
var bool: bin_item_11_9;
var bool: bin_item_11_10;
var bool: bin_item_11_11;
var bool: bin_item_11_12;
var bool: bin_item_12_0;
var bool: bin_item_12_1;
var bool: bin_item_12_2;
var bool: bin_item_12_3;
var bool: bin_item_12_4;
var bool: bin_item_12_5;
var bool: bin_item_12_6;
var bool: bin_item_12_7;
var bool: bin_item_12_8;
var bool: bin_item_12_9;
var bool: bin_item_12_10;
var bool: bin_item_12_11;
var bool: bin_item_12_12;
constraint decreasing([bin_load_0, bin_load_1, bin_load_2, bin_load_3, bin_load_4, bin_load_5, bin_load_6, bin_load_7, bin_load_8, bin_load_9, bin_load_10, bin_load_11, bin_load_12]);
constraint (bin_load_0 > 0);
constraint (bin_load_0 == sum([(bin_item_0_0 * 10), (bin_item_0_1 * 5), (bin_item_0_2 * 12), (bin_item_0_3 * 6), (bin_item_0_4 * 13), (bin_item_0_5 * 12), (bin_item_0_6 * 12), (bin_item_0_7 * 11), (bin_item_0_8 * 9), (bin_item_0_9 * 1), (bin_item_0_10 * 8), (bin_item_0_11 * 13), (bin_item_0_12 * 4)]));
constraint (bin_load_1 == sum([(bin_item_1_0 * 10), (bin_item_1_1 * 5), (bin_item_1_2 * 12), (bin_item_1_3 * 6), (bin_item_1_4 * 13), (bin_item_1_5 * 12), (bin_item_1_6 * 12), (bin_item_1_7 * 11), (bin_item_1_8 * 9), (bin_item_1_9 * 1), (bin_item_1_10 * 8), (bin_item_1_11 * 13), (bin_item_1_12 * 4)]));
constraint (bin_load_2 == sum([(bin_item_2_0 * 10), (bin_item_2_1 * 5), (bin_item_2_2 * 12), (bin_item_2_3 * 6), (bin_item_2_4 * 13), (bin_item_2_5 * 12), (bin_item_2_6 * 12), (bin_item_2_7 * 11), (bin_item_2_8 * 9), (bin_item_2_9 * 1), (bin_item_2_10 * 8), (bin_item_2_11 * 13), (bin_item_2_12 * 4)]));
constraint (bin_load_3 == sum([(bin_item_3_0 * 10), (bin_item_3_1 * 5), (bin_item_3_2 * 12), (bin_item_3_3 * 6), (bin_item_3_4 * 13), (bin_item_3_5 * 12), (bin_item_3_6 * 12), (bin_item_3_7 * 11), (bin_item_3_8 * 9), (bin_item_3_9 * 1), (bin_item_3_10 * 8), (bin_item_3_11 * 13), (bin_item_3_12 * 4)]));
constraint (bin_load_4 == sum([(bin_item_4_0 * 10), (bin_item_4_1 * 5), (bin_item_4_2 * 12), (bin_item_4_3 * 6), (bin_item_4_4 * 13), (bin_item_4_5 * 12), (bin_item_4_6 * 12), (bin_item_4_7 * 11), (bin_item_4_8 * 9), (bin_item_4_9 * 1), (bin_item_4_10 * 8), (bin_item_4_11 * 13), (bin_item_4_12 * 4)]));
constraint (bin_load_5 == sum([(bin_item_5_0 * 10), (bin_item_5_1 * 5), (bin_item_5_2 * 12), (bin_item_5_3 * 6), (bin_item_5_4 * 13), (bin_item_5_5 * 12), (bin_item_5_6 * 12), (bin_item_5_7 * 11), (bin_item_5_8 * 9), (bin_item_5_9 * 1), (bin_item_5_10 * 8), (bin_item_5_11 * 13), (bin_item_5_12 * 4)]));
constraint (bin_load_6 == sum([(bin_item_6_0 * 10), (bin_item_6_1 * 5), (bin_item_6_2 * 12), (bin_item_6_3 * 6), (bin_item_6_4 * 13), (bin_item_6_5 * 12), (bin_item_6_6 * 12), (bin_item_6_7 * 11), (bin_item_6_8 * 9), (bin_item_6_9 * 1), (bin_item_6_10 * 8), (bin_item_6_11 * 13), (bin_item_6_12 * 4)]));
constraint (bin_load_7 == sum([(bin_item_7_0 * 10), (bin_item_7_1 * 5), (bin_item_7_2 * 12), (bin_item_7_3 * 6), (bin_item_7_4 * 13), (bin_item_7_5 * 12), (bin_item_7_6 * 12), (bin_item_7_7 * 11), (bin_item_7_8 * 9), (bin_item_7_9 * 1), (bin_item_7_10 * 8), (bin_item_7_11 * 13), (bin_item_7_12 * 4)]));
constraint (bin_load_8 == sum([(bin_item_8_0 * 10), (bin_item_8_1 * 5), (bin_item_8_2 * 12), (bin_item_8_3 * 6), (bin_item_8_4 * 13), (bin_item_8_5 * 12), (bin_item_8_6 * 12), (bin_item_8_7 * 11), (bin_item_8_8 * 9), (bin_item_8_9 * 1), (bin_item_8_10 * 8), (bin_item_8_11 * 13), (bin_item_8_12 * 4)]));
constraint (bin_load_9 == sum([(bin_item_9_0 * 10), (bin_item_9_1 * 5), (bin_item_9_2 * 12), (bin_item_9_3 * 6), (bin_item_9_4 * 13), (bin_item_9_5 * 12), (bin_item_9_6 * 12), (bin_item_9_7 * 11), (bin_item_9_8 * 9), (bin_item_9_9 * 1), (bin_item_9_10 * 8), (bin_item_9_11 * 13), (bin_item_9_12 * 4)]));
constraint (bin_load_10 == sum([(bin_item_10_0 * 10), (bin_item_10_1 * 5), (bin_item_10_2 * 12), (bin_item_10_3 * 6), (bin_item_10_4 * 13), (bin_item_10_5 * 12), (bin_item_10_6 * 12), (bin_item_10_7 * 11), (bin_item_10_8 * 9), (bin_item_10_9 * 1), (bin_item_10_10 * 8), (bin_item_10_11 * 13), (bin_item_10_12 * 4)]));
constraint (bin_load_11 == sum([(bin_item_11_0 * 10), (bin_item_11_1 * 5), (bin_item_11_2 * 12), (bin_item_11_3 * 6), (bin_item_11_4 * 13), (bin_item_11_5 * 12), (bin_item_11_6 * 12), (bin_item_11_7 * 11), (bin_item_11_8 * 9), (bin_item_11_9 * 1), (bin_item_11_10 * 8), (bin_item_11_11 * 13), (bin_item_11_12 * 4)]));
constraint (bin_load_12 == sum([(bin_item_12_0 * 10), (bin_item_12_1 * 5), (bin_item_12_2 * 12), (bin_item_12_3 * 6), (bin_item_12_4 * 13), (bin_item_12_5 * 12), (bin_item_12_6 * 12), (bin_item_12_7 * 11), (bin_item_12_8 * 9), (bin_item_12_9 * 1), (bin_item_12_10 * 8), (bin_item_12_11 * 13), (bin_item_12_12 * 4)]));
constraint (sum([bin_item_0_0, bin_item_1_0, bin_item_2_0, bin_item_3_0, bin_item_4_0, bin_item_5_0, bin_item_6_0, bin_item_7_0, bin_item_8_0, bin_item_9_0, bin_item_10_0, bin_item_11_0, bin_item_12_0]) == 1);
constraint (sum([bin_item_0_1, bin_item_1_1, bin_item_2_1, bin_item_3_1, bin_item_4_1, bin_item_5_1, bin_item_6_1, bin_item_7_1, bin_item_8_1, bin_item_9_1, bin_item_10_1, bin_item_11_1, bin_item_12_1]) == 1);
constraint (sum([bin_item_0_2, bin_item_1_2, bin_item_2_2, bin_item_3_2, bin_item_4_2, bin_item_5_2, bin_item_6_2, bin_item_7_2, bin_item_8_2, bin_item_9_2, bin_item_10_2, bin_item_11_2, bin_item_12_2]) == 1);
constraint (sum([bin_item_0_3, bin_item_1_3, bin_item_2_3, bin_item_3_3, bin_item_4_3, bin_item_5_3, bin_item_6_3, bin_item_7_3, bin_item_8_3, bin_item_9_3, bin_item_10_3, bin_item_11_3, bin_item_12_3]) == 1);
constraint (sum([bin_item_0_4, bin_item_1_4, bin_item_2_4, bin_item_3_4, bin_item_4_4, bin_item_5_4, bin_item_6_4, bin_item_7_4, bin_item_8_4, bin_item_9_4, bin_item_10_4, bin_item_11_4, bin_item_12_4]) == 1);
constraint (sum([bin_item_0_5, bin_item_1_5, bin_item_2_5, bin_item_3_5, bin_item_4_5, bin_item_5_5, bin_item_6_5, bin_item_7_5, bin_item_8_5, bin_item_9_5, bin_item_10_5, bin_item_11_5, bin_item_12_5]) == 1);
constraint (sum([bin_item_0_6, bin_item_1_6, bin_item_2_6, bin_item_3_6, bin_item_4_6, bin_item_5_6, bin_item_6_6, bin_item_7_6, bin_item_8_6, bin_item_9_6, bin_item_10_6, bin_item_11_6, bin_item_12_6]) == 1);
constraint (sum([bin_item_0_7, bin_item_1_7, bin_item_2_7, bin_item_3_7, bin_item_4_7, bin_item_5_7, bin_item_6_7, bin_item_7_7, bin_item_8_7, bin_item_9_7, bin_item_10_7, bin_item_11_7, bin_item_12_7]) == 1);
constraint (sum([bin_item_0_8, bin_item_1_8, bin_item_2_8, bin_item_3_8, bin_item_4_8, bin_item_5_8, bin_item_6_8, bin_item_7_8, bin_item_8_8, bin_item_9_8, bin_item_10_8, bin_item_11_8, bin_item_12_8]) == 1);
constraint (sum([bin_item_0_9, bin_item_1_9, bin_item_2_9, bin_item_3_9, bin_item_4_9, bin_item_5_9, bin_item_6_9, bin_item_7_9, bin_item_8_9, bin_item_9_9, bin_item_10_9, bin_item_11_9, bin_item_12_9]) == 1);
constraint (sum([bin_item_0_10, bin_item_1_10, bin_item_2_10, bin_item_3_10, bin_item_4_10, bin_item_5_10, bin_item_6_10, bin_item_7_10, bin_item_8_10, bin_item_9_10, bin_item_10_10, bin_item_11_10, bin_item_12_10]) == 1);
constraint (sum([bin_item_0_11, bin_item_1_11, bin_item_2_11, bin_item_3_11, bin_item_4_11, bin_item_5_11, bin_item_6_11, bin_item_7_11, bin_item_8_11, bin_item_9_11, bin_item_10_11, bin_item_11_11, bin_item_12_11]) == 1);
constraint (sum([bin_item_0_12, bin_item_1_12, bin_item_2_12, bin_item_3_12, bin_item_4_12, bin_item_5_12, bin_item_6_12, bin_item_7_12, bin_item_8_12, bin_item_9_12, bin_item_10_12, bin_item_11_12, bin_item_12_12]) == 1);
solve minimize sum([(bin_load_0 > 0), (bin_load_1 > 0), (bin_load_2 > 0), (bin_load_3 > 0), (bin_load_4 > 0), (bin_load_5 > 0), (bin_load_6 > 0), (bin_load_7 > 0), (bin_load_8 > 0), (bin_load_9 > 0), (bin_load_10 > 0), (bin_load_11 > 0), (bin_load_12 > 0)]);
